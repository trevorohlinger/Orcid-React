[{"C:\\Users\\trevorohlinger\\repos\\my-app\\src\\index.js":"1","C:\\Users\\trevorohlinger\\repos\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\trevorohlinger\\repos\\my-app\\src\\App.js":"3","C:\\Users\\trevorohlinger\\repos\\my-app\\src\\Components\\Login.js":"4","C:\\Users\\trevorohlinger\\repos\\my-app\\src\\components\\Login.js":"5","C:\\Users\\trevorohlinger\\repos\\my-app\\src\\components\\Access.js":"6","C:\\Users\\trevorohlinger\\repos\\my-app\\src\\components\\Denied.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1619,"mtime":1618596256966,"results":"11","hashOfConfig":"9"},{"size":290,"mtime":1611351612661,"results":"12","hashOfConfig":"9"},{"size":5875,"mtime":1617748800245,"results":"13","hashOfConfig":"9"},{"size":5435,"mtime":1618933693362,"results":"14","hashOfConfig":"9"},{"size":520,"mtime":1618440200674,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"8ckvt3",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"C:\\Users\\trevorohlinger\\repos\\my-app\\src\\index.js",[],["35","36"],"C:\\Users\\trevorohlinger\\repos\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\trevorohlinger\\repos\\my-app\\src\\App.js",["37"],"import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport Login from './components/Login';\nimport Access from './components/Access';\nimport Denied from './components/Denied';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n}  from \"react-router-dom\";\n\n//create router here instead of going straight to login.\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li> \n            <li>\n            {/* <Link to=\"/logon\">logon</Link> */}\n            <a href=\"https://spm35eaceb.execute-api.us-west-2.amazonaws.com/dev/logon\">logon</a>\n            </li>\n            <li>\n            {/* <Link to=\"Orcid\"></Link> */}\n            <a href=\"https://spm35eaceb.execute-api.us-west-2.amazonaws.com/dev/orcid\">orcid</a>\n            </li>\n            <li>\n            {/* <Link to=\"Denied\"></Link> Remove this link in final version*/}\n            <a href=\"https://spm35eaceb.execute-api.us-west-2.amazonaws.com/dev/denied\">denied</a>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route \n            path=\"/logon\" \n            render={props => (\n              <Login {...props}/>\n            )}\n          />\n          <Route path=\"/access\">\n            <Access /> \n          </Route>\n          <Route path=\"/denied\">\n            <Denied /> \n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","C:\\Users\\trevorohlinger\\repos\\my-app\\src\\Components\\Login.js",["38"],"C:\\Users\\trevorohlinger\\repos\\my-app\\src\\components\\Login.js",["39","40","41","42","43","44"],"import React, { Component } from 'react';\nimport queryString from 'query-string'\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  useLocation\n} from \"react-router-dom\";\n\nvar qs = require('qs');\nvar assert = require('assert');\n\nvar obj = qs.parse('a=c');\nassert.deepEqual(obj, { a: 'c' });\n\nvar str = qs.stringify(obj);\nassert.equal(str, 'a=c');\n\n\n\nclass Login extends Component {\n  constructor(props) {\n\tsuper(props);\n\n\tthis.state = {\n\t  success : false,\n//\t  appId : '700cb295-52f1-4ea6-8d5f-a48166209ed6',\n//\t  clientSecret : 'ocO9sMF7BWLhu_Z7x7nfUP9tsrsL5kL0o6Fm19qx',\n\t};\n\n\n  }\n\n\t// getURL() {\n\t// \tlet location = useLocation();\n\t// }\n\n  componentDidMount() {\n\n\t// It seems this code is not being reached after redirect and callback from AWS ***********************************************************\n\t  sessionStorage.setItem('test', 'abcd');\n\t // let location = useLocation();\n\t  const queryParams = qs.parse(this.props.location.search, {ignoreQueryPrefix: true}).access_token\n\t  // then save query param to local storage\n\t  sessionStorage.setItem(\"token\", queryParams.token)\n\t  console.log(\"queryParams =\",queryParams);\n\t// It seems this code is not being reached after redirect and callback from AWS ***********************************************************\n\n\t// Code for saving access token information. WIP **********************************************************\n\t/*  const fetches = {\n\t\t  loginFetch: (username, password) => {\n\t\t\t  return fetch('s://spm35eaceb.execute-api.us-west-2.amazonaws.com/dev/callback',{\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type' : 'application/json',\n\t\t\t\t'Accepts' : 'application/json',\n\t\t\t\ttoken : localStorage.getItem('token')\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tusername: username,\n\t\t\t\tpassword: password\n\t\t\t})\n\t\t\t\t}).then(res => res.json())\n\t\t  }\n\t\t}\n\n\t\texport const loginUser = (username, password) => {\n\t\t\treturn function(dispatch){\n\t\t\t\tfetches.loginFetch(username, password)\n\t\t\t\t.then(json => {\n\t\t\t\t\tif(json.token){\n\t\t\t\t\t\tlocalStorage.setItem('token', json.token)\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: \"SET_USER\",\n\t\t\t\t\t\t\tpayload: json\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(json.error)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t} */\n\t// Code for saving access token information. WIP **********************************************************\n\n\n\t}\n\n\n\t// Changing this value window.location.href= will change the redirect. The question is how do I change /dev/login to redirect to the proper URL and not google.com\n\t// Solved by creating a new lambda function with a similar name and giving it a new API endpoint called /logon instead of /login.\n\t// window.location.href= 'https://spm35eaceb.execute-api.us-west-2.amazonaws.com/dev/login'\n\n\t// send a cookie before returning\n/*\tif (!this.props.match.params.code)\n\t{\n\t//\twindow.location.href= 'https://spm35eaceb.execute-api.us-west-2.amazonaws.com/dev/logon'\n\t//https://boisestateorcidauthentication.auth.us-west-2.amazoncognito.com/oauth2/authorize?response_type=code&client_id=7dtn7vm3gb4m0fl51hmbpihaa6&redirect_uri=https%3A//spm35eaceb.execute-api.us-west-2.amazonaws.com/dev/callback%3Fstate%3Dstate=b660a377-04e2-4524-bee8-54b0b97df8a3\n\t\tlet url= encodeURI('https://spm35eaceb.execute-api.us-west-2.amazonaws.com/dev/logon')\n\t\twindow.location.href= url;\n\n\t} */\n\n\t\t// var params = {\n\t\t// \tclient_id:     this.appId,\n\t\t// \tclient_secret: this.appClientSecret,\n\t\t// \t//code:          openCode, // This is the code from the query string in URL\n\t\t// \t// remove state for now. state:         newState,\n\t\t// \tredirect_uri:  'http://localhost:3000',\n\t\t// \tgrant_type:    'authorization_code'\n\t\t//   };\n\n\t\t//   const axios = require('axios')\n\n\t\t//   axios.post('https://spm35eaceb.execute-api.us-west-2.amazonaws.com/dev/callback', {\n\t\t// \t\tparams\n\t\t//   })\n\t\t// \t.then(function (response) {\n\t\t// \t  console.log(response);\n\t\t// \t})\n\n/*\t\t\taxios.post('https://spm35eaceb.execute-api.us-west-2.amazonaws.com/dev/logon', {\n\t\t\t\tName: 'Fred',\n\t\t\t\tAge: '23'\n\t\t\t  })\n\t\t\t  .then(function (response) {\n\t\t\t\tconsole.log(response);\n\t\t\t  }) */\n\n\n\t/*\tconst search = window.location.search;\n\t\tconst params = new URLSearchParams(search);\n\t\tconst foo = params.get('code'); */\n\n\t//const query = new URLSearchParams(this.props.location.search);\n\t//const token = query.get('token')\n\t//console.log(token)//123\n\n\t//\tconsole.log(this.props);\n\t//qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).__firebase_request_key\n\t  //window.location.href = 'https://twitter.com/home'\n\t/*if query paramater code = true then save code and send them to the login function with orcid\n\tpass token to the callback function tell orcid to go exchange code and send it back.\n\texplain when complete */\n\n\t//checkLoginStatus()\n\t// TODO: Backend Function for redirect login to Boise State -- Complete\n\t// TODO: Backend Function for callback from Boise State\n\t// TODO: Backend Function for callback from ORCID\n\n\t// TODO: Check for access token (Session Storage)\n\t// TODO: If no token, check to see if they are logged in\n\t// TODO: If not logged in, redirect out to AWS Lambda to redirect to Boise State Login\n\n\t// TODO: Redirect to AWS Lambda to redirect to ORCID token exchange\n\t// TODO: Look for query parameter to know if ORCID code was successfull\n/*\n  render() {\n    return (\n      <div>\n\t  { this.state.success ?\n\t    <div>\n\t\t  SUCCESS\n\t\t</div>\n\t    :\n\t\t<div>ERROR</div>\n\t  }\n      </div>\n    );\n  }\n}\n\nexport default Login;\n*/\n\n  render() {\n\tconst queryParams = qs.parse(this.props.location.search, {ignoreQueryPrefix: true}).access_token\n\t// then save query param to local storage\n\tsessionStorage.setItem(\"token\", queryParams.token)\n\tconsole.log(\"queryParams =\",queryParams);\n    return (\n      <div>Medium Tutorial: {this.props.match.params.code}</div>\n//\t  <div>Saving Access Token :  {this.props.match.params.code}</div>\n\t  \n    );\n  }\n}\n\nexport default Login;","C:\\Users\\trevorohlinger\\repos\\my-app\\src\\components\\Access.js",["45"],"import React, { Component } from 'react';\r\nimport queryString from 'query-string'\r\n\r\nimport axios from 'axios';\r\n\r\nclass Access extends Component {\r\n  constructor(props) {\r\n\r\n\tsuper(props);\r\n  const values = queryString.parse(window.location.search)\r\n  console.log(JSON.stringify(values))\r\n    this.state = {\r\n      success : false,\r\n    };\r\n\r\n  }\r\n\r\n  parseJwt(token) {\r\n    const base64Url = token.split('.')[1]\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/')\r\n    return JSON.parse(window.atob(base64))\r\n  }\r\n\r\n    componentDidMount() {\r\n      const values = queryString.parse(window.location.search)\r\n      console.log(JSON.stringify(values))\r\n    if (values.access_token)\r\n    {\r\n\r\n      sessionStorage.setItem(\"access_token\", values.access_token)\r\n      let parsedToken = this.parseJwt(values.access_token)\r\n      // employeeID is here\r\n      console.log(parsedToken[\"urn:oid:1.2.840.113556.1.2.610\"])\r\n      //console.log(this.parseJwt(values.access_token))\r\n        /*1. Extract employeeNumber from access token. --Complete\r\n          2. Check DynamoDb using a query for employeeNumber. If it already exists skip we are done.\r\n          3. if not continue getting the Orcid access token.\r\n        */  \r\n  /*  do this from lambda  \r\n      grant permissions inside aws to post to dynamodb\r\n          aws dynamodb put-item \\\r\n          --table Orcid-Data-Boise-State-University \\\r\n          --item parsedToken[\"urn:oid:1.2.840.113556.1.2.610\"] \\\r\n          --condition-expression \"attribute_not_exists(Id)\" */\r\n\r\n      window.location.href='https://sandbox.orcid.org/oauth/authorize?client_id=APP-RASOJQY62Z86Q8CU&response_type=code&scope=/read-limited%20/activities/update%20/person/update&redirect_uri=https://localhost:3000/access'\r\n      \r\n      /* const orcidCode = queryString.parse(window.location.search)\r\n         sessionStorage.setItem(\"orcidCode\", orcidCode)  */\r\n\r\n    } else if (values.code)\r\n    {\r\n // Need to import ajax and send this post to AWS Lambda using ajax \r\n  /*    $.ajax({\r\n        url: 'https://spm35eaceb.execute-api.us-west-2.amazonaws.com/dev/orcid',\r\n        type: 'POST',\r\n        crossDomain: true,\r\n        contentType: 'application/json',\r\n        data: JSON.stringify(data),\r\n        dataType: 'json',\r\n        success: function(data) {\r\n            //success stuff. data here is the response, not your original data\r\n        },\r\n        error: function(xhr, ajaxOptions, thrownError) {\r\n            //error handling stuff\r\n        }\r\n    }); */\r\n\r\n        // POST request using axios with set headers\r\n   /*     const article = { title: 'React POST Code to AWS Lambda' };\r\n        const headers = { \r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/x-www-form-urlencoded', \r\n          'Access-Control-Allow-Headers' : 'Content-Type',\r\n          'Access-Control-Allow-Methods' : 'OPTIONS,POST,GET', \r\n        };\r\n        axios.post('https://spm35eaceb.execute-api.us-west-2.amazonaws.com/dev/orcid', article, { headers })\r\n            .then(response => this.setState({ articleId: response.data.id }));\r\n\r\n      console.log(\"code=\",values.code) */\r\n      window.location.href='https://spm35eaceb.execute-api.us-west-2.amazonaws.com/dev/orcid?code=' + values.code\r\n\r\n  /*      const requestOptions = {\r\n        method: 'POST', \r\n       // headers: { 'Accept': 'application/json', 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/x-www-form-urlencoded', \r\n          'Access-Control-Allow-Headers' : 'Content-Type',\r\n          'Access-Control-Allow-Origin'  : 'https://sandbox.orcid.org/oauth/token',\r\n          // https://gentle-inlet-06589.herokuapp.com/https://sandbox.orcid.org/oauth/token\r\n          'Access-Control-Allow-Methods' : 'OPTIONS,POST,GET', \r\n       },\r\n        data: JSON.stringify({\r\n           client_id: 'APP-RASOJQY62Z86Q8CU',\r\n           client_secret : 'df79d593-8392-46ca-9f4a-2fb4cb109655',\r\n           grant_type : 'authorization_code',\r\n           code: values.code, \r\n           redirect_uri  : 'https://localhost:3000'}) \r\n      }; */\r\n     /* fetch('https://sandbox.orcid.org/oauth/token', requestOptions)\r\n          .then(response => {\r\n            console.log('response= ',response)\r\n          }) */\r\n /*          const response = await fetch('https://sandbox.orcid.org/oauth/token', requestOptions);\r\n           const data = await response.json(); \r\n           this.setState({ postId: data.id }); \r\n    } else {\r\n        console.log(\"User denied authorization or authorization has failed. Attempting to get permission again\")\r\n        window.location.href='https://localhost:3000/denied'\r\n    } */\r\n// \r\n    //sessionStorage.setItem(\"access_token_parsed\", parseJwt(values.access_token))\r\n\r\n    // ------------------------------------------- important -------------------------------- sessionStorage.setItem(\"id_token\", values.id_token) \r\n      \r\n    //  sessionStorage.setItem(\"access_token\", values.access_token.employeeNumber)\r\n    //  window.sessionStorage.getItem(\"access_token\")\r\n    //  console.log(\"access_token =\",data.access_token)\r\n\r\n\t  // then save query param to local storage\r\n\t  //  sessionStorage.setItem(\"token\", queryParams.token)\r\n\t  //  console.log(\"queryParams =\",queryParams);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n        <h1>Access</h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Access;","C:\\Users\\trevorohlinger\\repos\\my-app\\src\\components\\Denied.js",["46"],"import React, { Component } from 'react';\r\nimport queryString from 'query-string'\r\n\r\nclass Denied extends Component {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\r\n    this.state = {\r\n      success : false,\r\n    };\r\n\r\n  }\r\n\r\n    componentDidMount() {\r\n    \r\n\r\n    }\r\n  render() {\r\n    return (\r\n        <h1>Please allow Boise State University access to your ORCID record. It allows us to keep your works cited up to date automatically. Please click logon and authorize access.</h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Denied;",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":4,"column":3,"nodeType":"57","messageId":"58","endLine":6,"endColumn":4},{"ruleId":"51","severity":1,"message":"59","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":19},{"ruleId":"51","severity":1,"message":"60","line":3,"column":8,"nodeType":"53","messageId":"54","endLine":3,"endColumn":13},{"ruleId":"51","severity":1,"message":"61","line":4,"column":8,"nodeType":"53","messageId":"54","endLine":4,"endColumn":16},{"ruleId":"51","severity":1,"message":"62","line":6,"column":20,"nodeType":"53","messageId":"54","endLine":6,"endColumn":26},{"ruleId":"51","severity":1,"message":"63","line":7,"column":3,"nodeType":"53","messageId":"54","endLine":7,"endColumn":9},{"ruleId":"51","severity":1,"message":"64","line":8,"column":3,"nodeType":"53","messageId":"54","endLine":8,"endColumn":14},{"ruleId":"51","severity":1,"message":"60","line":4,"column":8,"nodeType":"53","messageId":"54","endLine":4,"endColumn":13},{"ruleId":"51","severity":1,"message":"59","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":19},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'queryString' is defined but never used.","'axios' is defined but never used.","'ReactDOM' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation"]